secrets:
  database_password:
    file: ./secrets/database_password
  wp_user_password:
    file: ./secrets/wp_user_password
  wp_admin_password:
    file: ./secrets/wp_admin_password
  ftp_password:
    file: ./secrets/ftp_password

services:
  nginx:
    container_name: nginx
    build: ./requirements/nginx
    ports:
      - "443:443"
      - "81:81"
    env_file:
      - .env
    volumes:
      - website:/var/www/html
    networks:
      - inception
    restart: always
    depends_on:
      wordpress:
        condition: service_started
      vsftpd:
        condition: service_healthy
  wordpress:
    container_name: wordpress
    build: ./requirements/wordpress
    env_file:
      - .env
    secrets:
      - database_password
      - wp_user_password
      - wp_admin_password
    volumes:
      - website:/var/www/html
    networks:
      - inception
    restart: always
    depends_on:
      mariadb:
        condition: service_started
      redis:
        condition: service_healthy
  mariadb:
    container_name: mariadb
    build: ./requirements/mariadb
    env_file:
      - .env
    secrets:
      - database_password
    volumes:
      - database:/var/lib/mysql
    networks:
      - inception
    ports:
      - "3306:3306"
    restart: always

  # Bonus
  portfolio-zola:
    container_name: portfolio-zola
    build: ./requirements/portfolio-zola
    restart: always
    ports:
      - "8080:8080"
  vsftpd:
    container_name: vsftpd
    build: 
      context: ./requirements/vsftpd
      args:
        - FTP_USER=${FTP_USER}
    restart: always
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    volumes:
      - website:/home/${FTP_USER}/ftp/files
    networks:
      - inception
    env_file:
      - .env
    secrets:
      - ftp_password
    healthcheck:
      test: ["CMD-SHELL", "curl -f ftp://${FTP_USER}:$(cat /run/secrets/ftp_password)@localhost:21 || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 60s
  redis:
    container_name: redis
    build: ./requirements/redis
    networks:
      - inception
    restart: always
    volumes:
      - redis_cache:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 0s
  adminer:
    container_name: adminer
    build: ./requirements/adminer
    networks:
      - inception
    restart: always
    healthcheck:
      test: ["CMD", "curl",  "-f", "http://nginx:81/adminer.php"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 60s
  # useful extra service: logging
  prometheus:
    container_name: prometheus
    build: ./requirements/logs/prometheus
    networks:
      - inception
    ports:
      - "9090:9090"
    restart: always
    depends_on:
      adminer:
        condition: service_healthy
      mariadb-exporter:
        condition: service_healthy
  mariadb-exporter:
    container_name: mariadb-exporter
    build: ./requirements/logs/mariadb-exporter
    env_file:
      - .env
    secrets:
      - database_password
    networks:
      - inception
    ports:
      - "9104:9104"
    restart: always
    depends_on:
      mariadb:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl",  "-f", "http://localhost:9104"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 0s

volumes:
  database:
    name: ${MARIADB_VOLUME}
  website:
    name: ${WORDPRESS_VOLUME}
  redis_cache:
    name: ${REDIS_VOLUME}
networks:
  inception:
    driver: bridge